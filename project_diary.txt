372 Project Diary

2/8/19 (in-class)
- decided the most important feature â€”> 2 player or AI
- came up with desirable features and ranked the top three features
- worked on user-stories and came up with things a player should be able to do
- came up with seven different user-stories
- ranked the user-stories in order of importance
- discussed how much time each user story will take to accomplish and its difficulty level
- discussed the expected time and difficulty level for the user-stories
- created a discord channel for the project

2/9/19
- setup a simple CMake project for SFML

2/10/19 
- created and debugged a board class

- Nami: Pair programming with CJ for two hours, we had lots of fun. I needed a lot of help and it was nice to have someone to work with CJ and get help from him. I think we were on task and tried to make clean node and use version control. This was my first experience using just the text editor and command line to program, so it was pretty rough at first. But I think I kind of got the idea now.

- CJ: I pair programmed with Nami for 2 hours. We accomplished roughly half of a 4 DP project (Allow a player to initiate a game). Specifically, we created a simple interface for board class and then tested it in main.cpp. We specifically tested that we could place ships and hit or miss ships. It appears that we accomplished 1 hour of work for every difficulty point. We probably could have done some test driven development but we mostly focused on making code which compiled.  I might devote some later effort into making some test cases for the functions in the board class or for the entire class. However, I feel the code we made (whose primary goal was to compile) was successful.
Pair programming was a new experience for me. It felt a lot like tutoring,  Nami and I have inconsistent coding style (for example, comments are common in her code but not so much in mine).  This inconsistency led me to constantly critique and advise (perhaps annoyingly) on all sorts of things. Despite this, I felt like we were on task the entire time.  I think it would be useful to have a standard for code. That said, I don't care enough and I feel it would take too long to develop and adhere to. While coding was slower than if I had done it by myself, I was able to spend more time thinking about the end goal.
I look forward to working with Nami again.

2/15/19 

- Nami: spent 2 hours pair programming. We made the board class more clear by having enums for board location states, everything that's suppose to return a state now returns  an enum. We modified the CMakeList so that there are now two executables, build and tests. We then created helper functions to simplify the creation of  test cases and their readability.

- CJ: Nami and I pair programmed for 2 hours. The session went smoothly like the last time. We refactored the Board class to make it more clear and explicit.  We added a testing framework to build alongside a release version using CMake.  While these additions are nice and clean,  we did not anticipate testing in our development time. These are 2 unaccounted hours in our prediction of 14 Difficulty Points (each approximately an hour). We've pushed the working build/test code so that either of us can create and/or modify Test Cases. The Discord/GitHub Webhook we have will notify the other upon pushing and this should help limit unexpected merge conflicts.
*** Something of note is Nami is adhering to my commenting strategies and this has improved her work. Pair programming has yielded some unexpected insight for both of us watching the other code.

2/18/19

- Nami: CJ and I pair programmed for 2.5 hours. We finished writing the test cases and verified that our board class works properly. We also started writing a text based battleship game. Working with CJ was very nice and I look forward to working with him again later this week.

- CJ: Pair programmed with Nami for 2 or so hours. We completed test cases for the Board class and created a working version of a 2 player (on the command line) text-based battleships.

2/19/19

- CJ: I polished the text-based battleships. It prevents a player from entering multiple positions and consequently taking their own and their enemy's turn.  It may not be pretty but the solution doesn't crash upon reading bad input. It is really hard to tell yourself to stop working on something when it works.

3/22/19

- CJ: Nami and I tried to pair program for two and a half hours to implement some local networking. It was not very successful because we did not have a clear and consistent goal. I later worked on implementing networking by myself for several hours. In the process I touched a lot of files. During this time, I completed ~90% of a working game with some simple networking.

3/23/19

- CJ: I spent an hour or so to clean up all of my changes and pushed them to GitHub. There was a lot. I feel bad about excluding Nami because she could have learned about networking. As of now, we have a functioning game. There are two command-line versions: one can be played locally in one console window which Nami and I made together and another which can be played across a local network. With this, we have completed and exceeded 5 out of 7 planned user stories.

2/24/19

- CJ: I added a basic graphical board. It took about 2 hours. I hope this enables Nami to work on the game.
- CJ (later): I added basic game functionality. It took about an hour. It was very fun to put everything together on the "first" try.
